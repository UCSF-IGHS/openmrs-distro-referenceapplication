name: OHRI Distro CI-CD

on:
  push:
    tags:
      - "*"
    branches:
      - "*"

  pull_request:
    branches:
      - "*"
    types: [opened, synchronize]
  release:
    types:
      - created

jobs:
  docker_distro:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Build Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: false
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/openmrs-esm-ohri-frontend:ci
          load: true
          build-args: |
            USERNAME=${{ github.actor }}
            TOKEN=${{ secrets.GITHUB_TOKEN }}
          cache-from: type=inline,ref=user/app:buildcache
          cache-to: type=inline,ref=user/app:buildcache,mode=max
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/openmrs-esm-ohri-frontend:ci

  sandbox:
    runs-on: ubuntu-latest

    needs: docker_distro

    if: ${{ github.ref == 'refs/heads/working' }}

    steps:
      # Update the Microfrontends to reflect what we have in the Working branch
      - uses: garygrossgarten/github-action-ssh@release
        name: Run the Update MicroFronEnd Script
        with:
          command: cd /usr/share/tomcat/distro/sandbox && docker run ${{ secrets.DOCKERHUB_USERNAME }}/openmrs-esm-ohri-frontend:ci
          host: ${{ secrets.HISTAC_HOST }}
          username: ${{ secrets.HISTAC_USERNAME }}
          privateKey: ${{ secrets.HISTAC_KEY}}
          port: ${{ secrets.HISTAC_PORT }}
